LIMPING NINJA'S TO DO LIST
+-- CONSIDERATIONS FOR THE FUTURE
  * Move all of the mudlib defines into a config file and create a parser
  * Allow python outside of the PYMOD_LIB directory, allow lazy loading, right
    now the mud crashes as PYMOD_LIB is an autoload directory and subdirectories
    make it barf.
  * Create a master.py which is the first object loaded, this can be used as 
    an initialization driver and override.
  * Create an autoload.py which can be used to autoload any additional python 
    scripts.
  * Move task list out of this document and into Github.
  * https://restrictedpython.readthedocs.io/en/latest/index.html

+-- KNOWN BUGS
  * Python accounts aren't dereferencing properly
  * Input handlers, specifically the editors, tend to output information
    twice when in a sub-menu such as the quest stage editor
  * Script dictionaries aren't fully dereferenced if a script creates a method.
    This is a known memory leak. Figure out how to fix!
 
+-- TASK LIST (needs evaluation)
 +-- HIGH PRIORITY
   * make ch.get_slots and ch.get_slot_types congruent
   * expose set_val to Python
   * flesh out functionality of the file buffer
   * flexible color customization
   * make the script editor properly indent with /i and /e 
   * get_fullkey is dangerous, since it can be changed due to recursive calls.
     really really need to fix this.
   * give Python access to extra descriptions
   * expose races and extra descriptions to Python
   * Make OLC display which fields are inherited
   * make dates of logs print numerically, not as a string 
   * Allow NPCs and objects to have commands attached to them. Possibly with
     some sort of "to" or "with" command to call upon them?
   * let generic_find accept comma-separated names (e.g. tom, jerry, bob)
   * track last command
   * redo communicate() and logging. Allow log messages to go to different
     user groups (i.e. script errors to scriptors, bad zone loads to builders) 
   * make property tables auto-enlarge theirselves when they get too big 
   * scripts for zone initialization/reset
   * worldGetRoom and worldPutRoom should be part of utils, not world
   * redo sets to be in a tree form rather than a table form
   * Rewrite character positions to be string-based and extensible
   * Move send_message parsing for $ expansion to mudlib, why does the engine
     actually care about this? Also it's really painful to use preprocessing
     directives for mudSettings to handle this. (RE: SOMEONE"'s")
  * https://restrictedpython.readthedocs.io/en/latest/index.html

 +-- MUDLIB PRIORITY
   * Rewrite the example zone to be a little more interesting and include
     some samples of scripting and object commands.
   * Snoop module
   * Intermud Daemon
   * OLC for mud settings
   * Master and Autoload
     - Domain permissions systems
     - Wizard home directories
   * Code based rooms, objects, etc. this is a difficult one. Should they
     be based on prototypes as (essentially) clones?

 +-- LOW PRIORITY
   * Snoop module
   * IP banning module
   * mudFTP module
   * soft-code chat channels
   * spellchecking in the text editor
   * stackable objects
   * mountable characters
   * OLC for mud settings
   * Rewrite MCCP as its own module

+-- NEEDS DEBUGGING
